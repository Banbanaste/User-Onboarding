{"ast":null,"code":"import _slicedToArray from \"/Users/banbanaste/Desktop/areas/LambdaSchool/Single Page Applications/User-Onboarding/post-form/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/banbanaste/Desktop/areas/LambdaSchool/Single Page Applications/User-Onboarding/post-form/src/components/Form.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { withFormik, Form, Field, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\nimport axios from \"axios\";\nimport { Container, Row, Col, Button } from \"reactstrap\";\n\nconst FormComponent = props => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        user = _useState2[0],\n        setUser = _useState2[1];\n\n  useEffect(() => {\n    console.log(\"status has changed\", props.status);\n    props.status && setUser(user => [...user, props.status]);\n  }, [props.status]);\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(Col, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"Name: \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }), React.createElement(Field, {\n    type: \"text\",\n    name: \"name\",\n    placeholder: props.touched.name && props.errors.name && props.errors.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }))), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Email:\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), React.createElement(Field, {\n    type: \"email\",\n    name: \"email\",\n    placeholder: props.touched.email && props.errors.email && props.errors.email,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }))), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Password:\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }), React.createElement(Field, {\n    type: \"text\",\n    name: \"password\",\n    placeholder: props.touched.password && props.errors.password && props.errors.password,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }))), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Terms of Service:\", React.createElement(Field, {\n    type: \"checkbox\",\n    name: \"tos\",\n    checked: props.values.tos,\n    style: {\n      margin: \"0 0 0 10px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }), props.touched.tos && props.errors.tos && React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, props.errors.tos))), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(Button, {\n    color: \"primary\",\n    size: \"sm\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"Submit\")))), React.createElement(Col, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  })));\n};\n\nconst FormikFormWrapper = withFormik({\n  mapPropsToValues(props) {\n    return {\n      name: props.name || \"\",\n      email: props.email || \"\",\n      password: props.password || \"\",\n      tos: props.tos || false\n    };\n  },\n\n  validationSchema: Yup.object().shape({\n    name: Yup.string().required(\"Is Required\"),\n    email: Yup.string().required(\"Is Required\"),\n    password: Yup.string().required(\"Is Required\"),\n    tos: Yup.boolean().oneOf([true], \"Must Accept Terms of Service\")\n  }),\n\n  handleSubmit(values, {\n    setStatus,\n    resetForm\n  }) {\n    console.log(\"submitting\", values);\n    axios.post(\"https://reqres.in/api/users/\", values).then(res => {\n      console.log(\"success\", res);\n      setStatus(res.data);\n      resetForm();\n    }).catch(err => console.log(err.response));\n  }\n\n})(FormComponent);\nexport default FormikFormWrapper;","map":{"version":3,"sources":["/Users/banbanaste/Desktop/areas/LambdaSchool/Single Page Applications/User-Onboarding/post-form/src/components/Form.js"],"names":["React","useState","useEffect","withFormik","Form","Field","ErrorMessage","Yup","axios","Container","Row","Col","Button","FormComponent","props","user","setUser","console","log","status","touched","name","errors","email","password","values","tos","margin","FormikFormWrapper","mapPropsToValues","validationSchema","object","shape","string","required","boolean","oneOf","handleSubmit","setStatus","resetForm","post","then","res","data","catch","err","response"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { withFormik, Form, Field, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\nimport axios from \"axios\";\nimport { Container, Row, Col, Button } from \"reactstrap\";\n\nconst FormComponent = props => {\n  const [user, setUser] = useState([]);\n\n  useEffect(() => {\n    console.log(\"status has changed\", props.status);\n    props.status && setUser(user => [...user, props.status]);\n  }, [props.status]);\n\n  return (\n    <Container>\n      <Row>\n        <Col>\n          <Form>\n            <Row>\n              <label>\n                Name: <br />\n                <Field\n                  type=\"text\"\n                  name=\"name\"\n                  placeholder={\n                    props.touched.name && props.errors.name && props.errors.name\n                  }\n                />\n              </label>\n            </Row>\n            <Row>\n              <label>\n                Email:\n                <br />\n                <Field\n                  type=\"email\"\n                  name=\"email\"\n                  placeholder={\n                    props.touched.email &&\n                    props.errors.email &&\n                    props.errors.email\n                  }\n                />\n              </label>\n            </Row>\n            <Row>\n              <label>\n                Password:\n                <br />\n                <Field\n                  type=\"text\"\n                  name=\"password\"\n                  placeholder={\n                    props.touched.password &&\n                    props.errors.password &&\n                    props.errors.password\n                  }\n                />\n              </label>\n            </Row>\n            <Row>\n              <label>\n                Terms of Service:\n                <Field\n                  type=\"checkbox\"\n                  name=\"tos\"\n                  checked={props.values.tos}\n                  style={{ margin: \"0 0 0 10px\" }}\n                />\n                {props.touched.tos && props.errors.tos && (\n                  <p>{props.errors.tos}</p>\n                )}\n              </label>\n            </Row>\n            <Row>\n              <Button color=\"primary\" size=\"sm\" type=\"submit\">\n                Submit\n              </Button>\n            </Row>\n          </Form>\n        </Col>\n        <Col></Col>\n      </Row>\n    </Container>\n  );\n};\n\nconst FormikFormWrapper = withFormik({\n  mapPropsToValues(props) {\n    return {\n      name: props.name || \"\",\n      email: props.email || \"\",\n      password: props.password || \"\",\n      tos: props.tos || false\n    };\n  },\n  validationSchema: Yup.object().shape({\n    name: Yup.string().required(\"Is Required\"),\n    email: Yup.string().required(\"Is Required\"),\n    password: Yup.string().required(\"Is Required\"),\n    tos: Yup.boolean().oneOf([true], \"Must Accept Terms of Service\")\n  }),\n  handleSubmit(values, { setStatus, resetForm }) {\n    console.log(\"submitting\", values);\n    axios\n      .post(\"https://reqres.in/api/users/\", values)\n      .then(res => {\n        console.log(\"success\", res);\n        setStatus(res.data);\n        resetForm();\n      })\n      .catch(err => console.log(err.response));\n  }\n})(FormComponent);\n\nexport default FormikFormWrapper;\n"]},"metadata":{},"sourceType":"module"}