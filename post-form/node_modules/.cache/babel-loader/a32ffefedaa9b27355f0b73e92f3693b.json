{"ast":null,"code":"var _jsxFileName = \"/Users/banbanaste/Desktop/areas/LambdaSchool/Single Page Applications/User-Onboarding/post-form/src/components/Form.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { withFormik, Form, Field, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\nimport axios from \"axios\";\n\nconst FormComponent = props => {\n  return React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, \"Name:\", React.createElement(Field, {\n    type: \"text\",\n    name: \"name\",\n    placeholder: props.touched.name && props.errors.name && props.errors.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  })), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"Email:\", React.createElement(Field, {\n    type: \"email\",\n    name: \"email\",\n    placeholder: props.touched.email && props.errors.email && props.errors.email,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  })), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"Password:\", React.createElement(Field, {\n    type: \"text\",\n    name: \"password\",\n    placeholder: props.touched.password && props.errors.password && props.errors.password,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  })), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Terms of Service:\", React.createElement(Field, {\n    type: \"checkbox\",\n    name: \"tos\",\n    checked: props.values.tos,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), props.touched.tos && props.errors.tos && React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, props.errors.tos)), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"Submit\"));\n};\n\nconst FormikFormWrapper = withFormik({\n  mapPropsToValues(props) {\n    return {\n      name: props.name || \"\",\n      email: props.email || \"\",\n      password: props.password || \"\",\n      tos: props.tos || false\n    };\n  },\n\n  validationSchema: Yup.object().shape({\n    name: Yup.string().required(\"Is Required\"),\n    email: Yup.string().required(\"Is Required\"),\n    password: Yup.string().required(\"Is Required\"),\n    vaccinations: Yup.boolean().oneOf([true], \"Must Accept Terms of Service\")\n  }),\n\n  handleSubmit(values, {\n    setStatus,\n    resetForm\n  }) {\n    console.log(\"submitting\", values);\n    axios.post(\"https://reqres.in/api/users/\", values).then(res => {\n      console.log(\"success\", res);\n      setStatus(res.data);\n      resetForm();\n    }).catch(err => console.log(err.response));\n  }\n\n})(FormComponent);\nexport default FormikFormWrapper;","map":{"version":3,"sources":["/Users/banbanaste/Desktop/areas/LambdaSchool/Single Page Applications/User-Onboarding/post-form/src/components/Form.js"],"names":["React","useState","useEffect","withFormik","Form","Field","ErrorMessage","Yup","axios","FormComponent","props","touched","name","errors","email","password","values","tos","FormikFormWrapper","mapPropsToValues","validationSchema","object","shape","string","required","vaccinations","boolean","oneOf","handleSubmit","setStatus","resetForm","console","log","post","then","res","data","catch","err","response"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { withFormik, Form, Field, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\nimport axios from \"axios\";\n\nconst FormComponent = props => {\n  return (\n    <Form>\n      <label>\n        Name:\n        <Field\n          type=\"text\"\n          name=\"name\"\n          placeholder={\n            props.touched.name && props.errors.name && props.errors.name\n          }\n        />\n      </label>\n      <label>\n        Email:\n        <Field\n          type=\"email\"\n          name=\"email\"\n          placeholder={\n            props.touched.email && props.errors.email && props.errors.email\n          }\n        />\n      </label>\n      <label>\n        Password:\n        <Field\n          type=\"text\"\n          name=\"password\"\n          placeholder={\n            props.touched.password &&\n            props.errors.password &&\n            props.errors.password\n          }\n        />\n      </label>\n      <label>\n        Terms of Service:\n        <Field type=\"checkbox\" name=\"tos\" checked={props.values.tos} />\n        {props.touched.tos && props.errors.tos && <p>{props.errors.tos}</p>}\n      </label>\n      <button type=\"submit\">Submit</button>\n    </Form>\n  );\n};\n\nconst FormikFormWrapper = withFormik({\n  mapPropsToValues(props) {\n    return {\n      name: props.name || \"\",\n      email: props.email || \"\",\n      password: props.password || \"\",\n      tos: props.tos || false\n    };\n  },\n  validationSchema: Yup.object().shape({\n    name: Yup.string().required(\"Is Required\"),\n    email: Yup.string().required(\"Is Required\"),\n    password: Yup.string().required(\"Is Required\"),\n    vaccinations: Yup.boolean().oneOf([true], \"Must Accept Terms of Service\")\n  }),\n  handleSubmit(values, { setStatus, resetForm }) {\n    console.log(\"submitting\", values);\n    axios\n      .post(\"https://reqres.in/api/users/\", values)\n      .then(res => {\n        console.log(\"success\", res);\n        setStatus(res.data);\n        resetForm();\n      })\n      .catch(err => console.log(err.response));\n  }\n})(FormComponent);\n\nexport default FormikFormWrapper;\n"]},"metadata":{},"sourceType":"module"}